import os

systems_folder = "ExampleProject/ExampleProject/Systems"
output_file = "Editor/Editor/Windows/SystemsStateWindow.cpp"

def extract_systems_names(folder):
    system_names = []
    for filename in os.listdir(folder):
        if filename.endswith(".h"):
            system_names.append(filename)
    return system_names

systems = extract_systems_names(systems_folder)

with open(output_file, 'w') as f:

#Defs
    f.write("#include \"SystemsStateWindow.h\"\n")
    f.write("#include \"imgui.h\"\n")
    f.write("\n")

#Notes
    f.write("\n")
    f.write("/// <summary>\n")
    f.write("/// This script is autogenerated\n")
    f.write("/// Don't make any changes in the file\n")
    f.write("/// </summary>")
    f.write("\n")

#Body
    f.write("Editor::SystemsStateWindow::SystemsStateWindow(const Ref<SystemsState>& systemsState) : systemsState(systemsState) { } \n")
    f.write("\n")

    f.write("void Editor::SystemsStateWindow::Update()\n")
    f.write("{\n")
    f.write("      ImGui::Begin(\"Systems State\");\n")
    for system in systems:
        f.write(f"      ImGui::Checkbox(\"{system.split('.')[0].strip()}\", &systemsState->{system.split('.')[0].strip()});\n")
    f.write("      ImGui::End();\n")
    f.write("};\n")

print(f"Generated C++ for {output_file}")